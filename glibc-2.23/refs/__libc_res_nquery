<use f='codebrowser/resolv/gethnamaddr.c' l='710' u='c' c='res_gethostbyaddr'/>
<use f='codebrowser/resolv/gethnamaddr.c' l='714' u='c' c='res_gethostbyaddr'/>
<use f='codebrowser/resolv/nss_dns/dns-canon.c' l='63' u='c' c='_nss_dns_getcanonname_r'/>
<use f='codebrowser/resolv/nss_dns/dns-host.c' l='463' u='c' c='_nss_dns_gethostbyaddr2_r'/>
<use f='codebrowser/resolv/nss_dns/dns-host.c' l='485' u='c' c='_nss_dns_gethostbyaddr2_r'/>
<use f='codebrowser/resolv/nss_dns/dns-host.c' l='490' u='c' c='_nss_dns_gethostbyaddr2_r'/>
<use f='codebrowser/resolv/nss_dns/dns-network.c' l='207' u='c' c='_nss_dns_getnetbyaddr_r'/>
<def f='codebrowser/resolv/res_query.c' l='113' ll='310' type='int __libc_res_nquery(res_state statp, const char * name, int class, int type, u_char * answer, int anslen, u_char ** answerp, u_char ** answerp2, int * nanswerp2, int * resplen2, int * answerp2_malloced)'/>
<use f='codebrowser/resolv/res_query.c' l='320' u='c' c='__res_nquery'/>
<use f='codebrowser/resolv/res_query.c' l='364' u='c' c='__libc_res_nsearch'/>
<use f='codebrowser/resolv/res_query.c' l='597' u='c' c='__libc_res_nquerydomain'/>
<doc f='codebrowser/resolv/res_query.c' l='103'>/*
 * Formulate a normal query, send, and await answer.
 * Returned answer is placed in supplied buffer &quot;answer&quot;.
 * Perform preliminary check of answer, returning success only
 * if no error is indicated and the answer count is nonzero.
 * Return the size of the response on success, -1 on error.
 * Error number is left in H_ERRNO.
 *
 * Caller must parse answer and determine whether it answers the question.
 */</doc>
