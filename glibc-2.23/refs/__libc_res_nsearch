<use f='codebrowser/resolv/gethnamaddr.c' l='618' u='c' c='res_gethostbyname2'/>
<use f='codebrowser/resolv/nss_dns/dns-host.c' l='192' u='c' c='_nss_dns_gethostbyname3_r'/>
<use f='codebrowser/resolv/nss_dns/dns-host.c' l='225' u='c' c='_nss_dns_gethostbyname3_r'/>
<use f='codebrowser/resolv/nss_dns/dns-host.c' l='315' u='c' c='_nss_dns_gethostbyname4_r'/>
<use f='codebrowser/resolv/nss_dns/dns-network.c' l='131' u='c' c='_nss_dns_getnetbyname_r'/>
<def f='codebrowser/resolv/res_query.c' l='331' ll='536' type='int __libc_res_nsearch(res_state statp, const char * name, int class, int type, u_char * answer, int anslen, u_char ** answerp, u_char ** answerp2, int * nanswerp2, int * resplen2, int * answerp2_malloced)'/>
<use f='codebrowser/resolv/res_query.c' l='546' u='c' c='__res_nsearch'/>
<doc f='codebrowser/resolv/res_query.c' l='325'>/*
 * Formulate a normal query, send, and retrieve answer in supplied buffer.
 * Return the size of the response on success, -1 on error.
 * If enabled, implement search rules until answer or unrecoverable failure
 * is detected.  Error code, if any, is left in H_ERRNO.
 */</doc>
