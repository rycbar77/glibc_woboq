<dec f='codebrowser/include/sys/mman.h' l='6' type='void * __mmap(void * __addr, size_t __len, int __prot, int __flags, int __fd, __off_t __offset)'/>
<doc f='codebrowser/include/sys/mman.h' l='5'>/* Now define the internal interfaces.  */</doc>
<use f='codebrowser/assert/assert.c' l='68' u='c' c='__assert_fail_base'/>
<use f='codebrowser/catgets/open_catalog.c' l='220' u='c' c='__open_catalog'/>
<dec f='codebrowser/sysdeps/generic/dl-mman.h' l='20' type='void * __mmap(void * , size_t , int , int , int , __off_t )'/>
<use f='codebrowser/sysdeps/generic/dl-mman.h' l='20' c='__mmap'/>
<doc f='codebrowser/sysdeps/generic/dl-mman.h' l='1'>/* Functions with hidden attribute internal to ld.so, which are declared
   in include/sys/mman.h.  Generic version.
   Copyright (C) 2015-2016 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   &lt;http://www.gnu.org/licenses/&gt;.  */</doc>
<use f='codebrowser/elf/dl-map-segments.h' l='56' u='c' c='_dl_map_segments'/>
<use f='codebrowser/elf/dl-map-segments.h' l='90' u='c' c='_dl_map_segments'/>
<use f='codebrowser/elf/dl-map-segments.h' l='137' u='c' c='_dl_map_segments'/>
<use f='codebrowser/elf/dl-minimal.c' l='78' u='c' c='__libc_memalign'/>
<use f='codebrowser/elf/dl-misc.c' l='62' u='c' c='_dl_sysdep_read_whole_file'/>
<use f='codebrowser/elf/dl-profile.c' l='392' u='c' c='_dl_start_profile'/>
<use f='codebrowser/sysdeps/posix/libc_fatal.c' l='147' u='c' c='__libc_message'/>
<use f='codebrowser/iconv/gconv_cache.c' l='81' u='c' c='__gconv_load_cache'/>
<use f='codebrowser/intl/loadmsgcat.c' l='475' u='c' c='_nl_load_domain'/>
<use f='codebrowser/locale/loadlocale.c' l='223' u='c' c='_nl_load_locale'/>
<use f='codebrowser/malloc/arena.c' l='561' macro='1' u='c' c='new_heap'/>
<use f='codebrowser/malloc/arena.c' l='572' macro='1' u='c' c='new_heap'/>
<use f='codebrowser/malloc/arena.c' l='588' macro='1' u='c' c='new_heap'/>
<use f='codebrowser/malloc/arena.c' l='655' macro='1' u='c' c='shrink_heap'/>
<use f='codebrowser/malloc/malloc.c' l='1097' u='c' c='sysmalloc'/>
<use f='codebrowser/malloc/malloc.c' l='1097' u='c' c='sysmalloc'/>
<use f='codebrowser/nscd/nscd_helper.c' l='336' u='c' c='__nscd_get_mapping'/>
<def f='codebrowser/sysdeps/unix/sysv/linux/wordsize-64/mmap.c' l='30' ll='36' macro='1' type='void * __mmap(void * addr, size_t len, int prot, int flags, int fd, off_t offset)'/>
<use f='codebrowser/sysdeps/unix/sysv/linux/wordsize-64/mmap.c' l='38' c='mmap'/>
<use f='codebrowser/sysdeps/unix/sysv/linux/wordsize-64/mmap.c' l='39' c='mmap64'/>
<use f='codebrowser/sysdeps/unix/sysv/linux/wordsize-64/mmap.c' l='40' c='__mmap64'/>
