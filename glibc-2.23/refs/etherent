<def f='codebrowser/include/netinet/ether.h' l='10' ll='14'/>
<use f='codebrowser/include/netinet/ether.h' l='17' c='_nss_files_parse_etherent'/>
<use f='codebrowser/include/netinet/ether.h' l='26' c='_nss_files_getetherent_r'/>
<use f='codebrowser/include/netinet/ether.h' l='29' c='_nss_files_gethostton_r'/>
<use f='codebrowser/include/netinet/ether.h' l='33' c='_nss_files_getntohost_r'/>
<use f='codebrowser/include/netinet/ether.h' l='26' c='_nss_nis_getetherent_r'/>
<use f='codebrowser/include/netinet/ether.h' l='29' c='_nss_nis_gethostton_r'/>
<use f='codebrowser/include/netinet/ether.h' l='33' c='_nss_nis_getntohost_r'/>
<use f='codebrowser/include/netinet/ether.h' l='26' c='_nss_nisplus_getetherent_r'/>
<use f='codebrowser/include/netinet/ether.h' l='29' c='_nss_nisplus_gethostton_r'/>
<use f='codebrowser/include/netinet/ether.h' l='33' c='_nss_nisplus_getntohost_r'/>
<size>16</size>
<doc f='codebrowser/include/netinet/ether.h' l='7'>/* Because the `ethers&apos; lookup does not fit so well in the scheme we
   define a dummy struct here which helps us to use the available
   functions.  */</doc>
<mbr r='etherent::e_name' o='0' t='const char *'/>
<mbr r='etherent::e_addr' o='64' t='struct ether_addr'/>
<use f='codebrowser/inet/ether_hton.c' l='27'/>
<use f='codebrowser/inet/ether_hton.c' l='48' c='ether_hostton'/>
<size>16</size>
<use f='codebrowser/inet/ether_ntoh.c' l='28'/>
<use f='codebrowser/inet/ether_ntoh.c' l='49' c='ether_ntohost'/>
<size>16</size>
