<dec f='codebrowser/posix/glob.h' l='146' type='int glob(const char *restrict __pattern, int __flags, int (*)(const char *, int) __errfunc, glob_t *restrict __pglob)'/>
<use f='codebrowser/posix/wordexp.c' l='391' u='c' c='do_parse_glob'/>
<def f='codebrowser/posix/glob.c' l='249' ll='1257' type='int glob(const char * pattern, int flags, int (*)(const char *, int) errfunc, glob_t * pglob)'/>
<use f='codebrowser/posix/glob.c' l='357' u='c' c='glob'/>
<use f='codebrowser/posix/glob.c' l='396' u='c' c='glob'/>
<use f='codebrowser/posix/glob.c' l='572' u='c' c='glob'/>
<use f='codebrowser/posix/glob.c' l='1046' u='c' c='glob'/>
<use f='codebrowser/sysdeps/wordsize-64/glob.c' l='6' c='glob64'/>
<doc f='codebrowser/posix/glob.c' l='241'>/* Do glob searching for PATTERN, placing results in PGLOB.
   The bits defined above may be set in FLAGS.
   If a directory cannot be opened or read and ERRFUNC is not nil,
   it is called with the pathname that caused the error, and the
   `errno&apos; value from the failing call; if it returns non-zero
   `glob&apos; returns GLOB_ABORTED; if it returns zero, the error is ignored.
   If memory cannot be allocated for PGLOB, GLOB_NOSPACE is returned.
   Otherwise, `glob&apos; returns zero.  */</doc>
