<dec f='codebrowser/libidn/idna.h' l='81' type='int idna_to_unicode_8z4z(const char * input, uint32_t ** output, int flags)'/>
<def f='codebrowser/libidn/idna.c' l='681' ll='696' type='int idna_to_unicode_8z4z(const char * input, uint32_t ** output, int flags)'/>
<use f='codebrowser/libidn/idna.c' l='717' u='c' c='idna_to_unicode_8z8z'/>
<doc f='codebrowser/libidn/idna.c' l='668'>/**
 * idna_to_unicode_8z4z:
 * @input: zero-terminated UTF-8 string.
 * @output: pointer to newly allocated output Unicode string.
 * @flags: IDNA flags, e.g. IDNA_ALLOW_UNASSIGNED or IDNA_USE_STD3_ASCII_RULES.
 *
 * Convert possibly ACE encoded domain name in UTF-8 format into a
 * UCS-4 string.  The domain name may contain several labels,
 * separated by dots.  The output buffer must be deallocated by the
 * caller.
 *
 * Return value: Returns IDNA_SUCCESS on success, or error code.
 **/</doc>
