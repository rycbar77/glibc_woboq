<dec f='codebrowser/posix/regcomp.c' l='70' type='bin_tree_t * parse_branch(re_string_t * regexp, regex_t * preg, re_token_t * token, reg_syntax_t syntax, int nest, reg_errcode_t * err)'/>
<use f='codebrowser/posix/regcomp.c' l='2137' u='c' c='parse_reg_exp'/>
<use f='codebrowser/posix/regcomp.c' l='2147' u='c' c='parse_reg_exp'/>
<def f='codebrowser/posix/regcomp.c' l='2176' ll='2213' type='bin_tree_t * parse_branch(re_string_t * regexp, regex_t * preg, re_token_t * token, reg_syntax_t syntax, int nest, reg_errcode_t * err)'/>
<doc f='codebrowser/posix/regcomp.c' l='2167'>/* This function build the following tree, from regular expression
   &lt;exp1&gt;&lt;exp2&gt;:
	CAT
	/ \
       /   \
   &lt;exp1&gt; &lt;exp2&gt;

   CAT means concatenation.  */</doc>
