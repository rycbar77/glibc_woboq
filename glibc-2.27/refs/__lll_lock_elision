<dec f='codebrowser/sysdeps/unix/sysv/linux/x86_64/lowlevellock.h' l='255' type='int __lll_lock_elision(int * futex, short * adapt_count, int private)'/>
<def f='codebrowser/sysdeps/unix/sysv/linux/x86/elision-lock.c' l='44' ll='107' type='int __lll_lock_elision(int * futex, short * adapt_count, int private)'/>
<doc f='codebrowser/sysdeps/unix/sysv/linux/x86/elision-lock.c' l='40'>/* Adaptive lock using transactions.
   By default the lock region is run as a transaction, and when it
   aborts or the lock is busy the lock adapts itself.  */</doc>
