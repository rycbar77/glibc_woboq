<dec f='codebrowser/malloc/obstack.h' l='184' type='void _obstack_newchunk(struct obstack * , int )'/>
<dec f='codebrowser/include/obstack.h' l='6' type='void _obstack_newchunk(struct obstack * , int )'/>
<use f='codebrowser/include/obstack.h' l='6' c='_obstack_newchunk'/>
<use f='codebrowser/debug/obprintf_chk.c' l='67' macro='1' u='c' c='__obstack_vprintf_chk'/>
<doc f='codebrowser/malloc/obstack.h' l='182'>/* Declare the external functions we use; they are in obstack.c.  */</doc>
<use f='codebrowser/libio/obprintf.c' l='48' macro='1' u='c' c='_IO_obstack_overflow'/>
<use f='codebrowser/libio/obprintf.c' l='76' macro='1' u='c' c='_IO_obstack_xsputn'/>
<use f='codebrowser/libio/obprintf.c' l='145' macro='1' u='c' c='_IO_obstack_vprintf'/>
<def f='codebrowser/malloc/obstack.c' l='244' ll='308' type='void _obstack_newchunk(struct obstack * h, int length)'/>
<doc f='codebrowser/malloc/obstack.c' l='238'>/* Allocate a new current chunk for the obstack *H
   on the assumption that LENGTH bytes need to be added
   to the current object, or a new object of length LENGTH allocated.
   Copies any partial object from the end of the old chunk
   to the beginning of the new one.  */</doc>
