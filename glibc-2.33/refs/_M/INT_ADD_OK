<dec f='codebrowser/include/intprops.h' l='626'/>
<doc f='codebrowser/include/intprops.h' l='601'>/* The following macros compute A + B, A - B, and A * B, respectively.
   If no overflow occurs, they set *R to the result and return 1;
   otherwise, they return 0 and may modify *R.

   Example usage:

     long int result;
     if (INT_ADD_OK (a, b, &amp;result))
       printf (&quot;result is %ld\n&quot;, result);
     else
       printf (&quot;overflow\n&quot;);

   A, B, and *R should be integers; they need not be the same type,
   and they need not be all signed or all unsigned.

   These macros work correctly on all known practical hosts, and do not rely
   on undefined behavior due to signed arithmetic overflow.

   These macros are not constant expressions.

   These macros may evaluate their arguments zero or multiple times, so the
   arguments should not have side effects.

   These macros are tuned for B being a constant.  */</doc>
