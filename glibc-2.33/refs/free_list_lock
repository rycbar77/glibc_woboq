<def f='codebrowser/malloc/arena.c' l='81' macro='1' type='__libc_lock_t'/>
<use f='codebrowser/malloc/arena.c' l='187' u='w' c='__malloc_fork_unlock_child'/>
<use f='codebrowser/malloc/arena.c' l='785' u='a' c='_int_new_arena'/>
<use f='codebrowser/malloc/arena.c' l='785' u='a' c='_int_new_arena'/>
<use f='codebrowser/malloc/arena.c' l='787' u='w' c='_int_new_arena'/>
<use f='codebrowser/malloc/arena.c' l='787' u='a' c='_int_new_arena'/>
<use f='codebrowser/malloc/arena.c' l='813' u='a' c='get_free_list'/>
<use f='codebrowser/malloc/arena.c' l='813' u='a' c='get_free_list'/>
<use f='codebrowser/malloc/arena.c' l='825' u='w' c='get_free_list'/>
<use f='codebrowser/malloc/arena.c' l='825' u='a' c='get_free_list'/>
<use f='codebrowser/malloc/arena.c' l='897' u='a' c='reused_arena'/>
<use f='codebrowser/malloc/arena.c' l='897' u='a' c='reused_arena'/>
<use f='codebrowser/malloc/arena.c' l='912' u='w' c='reused_arena'/>
<use f='codebrowser/malloc/arena.c' l='912' u='a' c='reused_arena'/>
<use f='codebrowser/malloc/arena.c' l='1008' u='a' c='__malloc_arena_thread_freeres'/>
<use f='codebrowser/malloc/arena.c' l='1008' u='a' c='__malloc_arena_thread_freeres'/>
<use f='codebrowser/malloc/arena.c' l='1017' u='w' c='__malloc_arena_thread_freeres'/>
<use f='codebrowser/malloc/arena.c' l='1017' u='a' c='__malloc_arena_thread_freeres'/>
<doc f='codebrowser/malloc/arena.c' l='76'>/* Arena free list.  free_list_lock synchronizes access to the
   free_list variable below, and the next_free and attached_threads
   members of struct malloc_state objects.  No other locks must be
   acquired after free_list_lock has been acquired.  */</doc>
