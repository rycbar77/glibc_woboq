<dec f='codebrowser/string/string.h' l='373' type='void * memmem(const void * __haystack, size_t __haystacklen, const void * __needle, size_t __needlelen)'/>
<dec f='codebrowser/include/string.h' l='115' type='void * memmem(const void * , size_t , const void * , size_t )'/>
<use f='codebrowser/include/string.h' l='115' c='memmem'/>
<use f='codebrowser/include/string.h' l='116' c='__memmem'/>
<doc f='codebrowser/string/string.h' l='370'>/* Find the first occurrence of NEEDLE in HAYSTACK.
   NEEDLE is NEEDLELEN bytes long;
   HAYSTACK is HAYSTACKLEN bytes long.  */</doc>
<use f='codebrowser/elf/readlib.c' l='167' u='c' c='process_file'/>
<use f='codebrowser/elf/readlib.c' l='168' u='c' c='process_file'/>
<def f='codebrowser/string/memmem.c' l='128' macro='1' type='void * memmem(const void * , size_t , const void * , size_t )'/>
