<inh f='include/c++/11/bits/stl_iterator_base_types.h' l='103' c='std::bidirectional_iterator_tag'/>
<def f='include/c++/11/bits/stl_iterator_base_types.h' l='107'/>
<use f='include/c++/11/bits/stl_iterator_base_types.h' l='212'/>
<use f='include/c++/11/bits/stl_iterator_base_types.h' l='223'/>
<use f='include/c++/11/bits/stl_iterator_base_types.h' l='256'/>
<use f='include/c++/11/bits/stl_iterator_base_types.h' l='258'/>
<use f='include/c++/11/bits/stl_iterator_base_funcs.h' l='99' c='_ZSt10__distanceT_S_St26random_access_iterator_tag'/>
<use f='include/c++/11/bits/stl_iterator_base_funcs.h' l='175' c='_ZSt9__advanceRT_T0_St26random_access_iterator_tag'/>
<use f='include/c++/11/bits/stl_algobase.h' l='320' c='_ZSt12__niter_baseRKN11__gnu_debug14_Safe_iteratorIT_T0_St26random_access_iterator_tagEE'/>
<use f='include/c++/11/bits/stl_algobase.h' l='375'/>
<use f='include/c++/11/bits/stl_algobase.h' l='395'/>
<use f='include/c++/11/bits/stl_algobase.h' l='415'/>
<use f='include/c++/11/bits/stl_algobase.h' l='692'/>
<use f='include/c++/11/bits/stl_algobase.h' l='709'/>
<use f='include/c++/11/bits/stl_algobase.h' l='726'/>
<use f='include/c++/11/bits/stl_algobase.h' l='1110' c='_ZSt10__fill_n_aT_T0_RKT1_St26random_access_iterator_tag'/>
<use f='include/c++/11/bits/stl_algobase.h' l='1259'/>
<use f='include/c++/11/bits/stl_algobase.h' l='1259'/>
<use f='include/c++/11/bits/stl_algobase.h' l='1598' c='_ZSt8__equal4T_S_T0_S0_'/>
<use f='include/c++/11/bits/stl_algobase.h' l='1625' c='_ZSt8__equal4T_S_T0_S0_T1_'/>
<use f='include/c++/11/bits/stl_algobase.h' l='2062' c='_ZSt9__find_ifT_S_T0_St26random_access_iterator_tag'/>
<use f='include/c++/11/bits/basic_string.h' l='539' c='_ZNSt7__cxx1112basic_stringC1EPKT_RKT1_'/>
<size>1</size>
<doc f='include/c++/11/bits/stl_iterator_base_types.h' l='105'>/// Random-access iterators support a superset of bidirectional
  /// iterator operations.</doc>
