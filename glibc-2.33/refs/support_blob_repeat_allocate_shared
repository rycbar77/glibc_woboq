<dec f='codebrowser/support/blob_repeat.h' l='47' type='struct support_blob_repeat support_blob_repeat_allocate_shared(const void * element, size_t element_size, size_t count)'/>
<def f='codebrowser/support/blob_repeat.c' l='281' ll='286' type='struct support_blob_repeat support_blob_repeat_allocate_shared(const void * element, size_t element_size, size_t count)'/>
<doc f='codebrowser/support/blob_repeat.h' l='41'>/* Like support_blob_repeat_allocate, except that copy-on-write
   semantics are disabled.  This means writing to one part of the blob
   can affect other parts.  It is possible to map non-shared memory
   over parts of the resulting blob using MAP_ANONYMOUS | MAP_FIXED
   | MAP_PRIVATE, so that writes to these parts do not affect
   others.  */</doc>
