<dec f='codebrowser/string/argz.h' l='38' type='error_t __argz_create(char *const * __argv, char **restrict __argz, size_t *restrict __len)'/>
<doc f='codebrowser/string/argz.h' l='35'>/* Make a &apos;\0&apos; separated arg vector from a unix argv vector, returning it in
   ARGZ, and the total length in LEN.  If a memory allocation error occurs,
   ENOMEM is returned, otherwise 0.  The result can be destroyed using free. */</doc>
<def f='codebrowser/string/argz-create.c' l='26' ll='51' type='error_t __argz_create(char *const * argv, char ** argz, size_t * len)'/>
<use f='codebrowser/string/argz-create.c' l='52' c='argz_create'/>
<doc f='codebrowser/string/argz-create.c' l='23'>/* Make a &apos;\0&apos; separated arg vector from a unix argv vector, returning it in
   ARGZ, and the total length in LEN.  If a memory allocation error occurs,
   ENOMEM is returned, otherwise 0.  */</doc>
