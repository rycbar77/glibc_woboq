<dec f='codebrowser/crypt/sha256.h' l='58' type='void __sha256_process_bytes(const void * buffer, size_t len, struct sha256_ctx * ctx)'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<use f='codebrowser/crypt/sha256-crypt.c' l='70' u='c' c='__sha256_crypt_r'/>
<doc f='codebrowser/crypt/sha256.h' l='54'>/* Starting with the result of former calls of this function (or the
   initialization function update the context for the next LEN bytes
   starting at BUFFER.
   It is NOT required that LEN is a multiple of 64.  */</doc>
<def f='codebrowser/crypt/sha256.c' l='142' ll='211' type='void __sha256_process_bytes(const void * buffer, size_t len, struct sha256_ctx * ctx)'/>
