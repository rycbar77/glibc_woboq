<dec f='codebrowser/sysdeps/generic/ldsodefs.h' l='1065' type='const Elf64_Sym * _dl_lookup_direct(struct link_map * map, const char * undef_name, uint32_t new_hash, const char * version, uint32_t version_hash)'/>
<doc f='codebrowser/sysdeps/generic/ldsodefs.h' l='1058'>/* Restricted version of _dl_lookup_symbol_x.  Searches MAP (and only
   MAP) for the symbol UNDEF_NAME, with GNU hash NEW_HASH (computed
   with dl_new_hash), symbol version VERSION, and symbol version hash
   VERSION_HASH (computed with _dl_elf_hash).  Returns a pointer to
   the symbol table entry in MAP on success, or NULL on failure.  MAP
   must have symbol versioning information, or otherwise the result is
   undefined.  */</doc>
<use f='codebrowser/elf/dl-call-libc-early-init.c' l='33' u='c' c='_dl_call_libc_early_init'/>
<def f='codebrowser/elf/dl-lookup-direct.c' l='70' ll='116' type='const Elf64_Sym * _dl_lookup_direct(struct link_map * map, const char * undef_name, uint32_t new_hash, const char * version, uint32_t version_hash)'/>
<doc f='codebrowser/elf/dl-lookup-direct.c' l='67'>/* This function corresponds to do_lookup_x in elf/dl-lookup.c.  The
   variant here is simplified because it does not search object
   dependencies.  It is optimized for a successful lookup.  */</doc>
<use f='codebrowser/elf/rtld_static_init.c' l='49' u='c' c='__rtld_static_init'/>
<use f='codebrowser/sysdeps/nptl/dl-mutex.c' l='40' u='c' c='__rtld_mutex_init'/>
<use f='codebrowser/sysdeps/nptl/dl-mutex.c' l='47' u='c' c='__rtld_mutex_init'/>
