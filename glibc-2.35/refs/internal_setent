<dec f='codebrowser/nss/nss_db/nss_db.h' l='64' type='enum nss_status internal_setent(const char * file, struct nss_db_map * mappingp)'/>
<use f='codebrowser/nss/nss_db/db-XXX.c' l='72' u='c' c='_nss_db_setetherent'/>
<use f='codebrowser/nss/nss_db/db-XXX.c' l='249' u='c' c='_nss_db_getetherent_r'/>
<use f='codebrowser/nss/nss_files/files-ethers.c' l='54' macro='1' u='c' c='_nss_db_gethostton_r'/>
<use f='codebrowser/nss/nss_files/files-ethers.c' l='60' macro='1' u='c' c='_nss_db_getntohost_r'/>
<doc f='codebrowser/nss/nss_db/nss_db.h' l='60'>/* Open the database stored in FILE.  If succesful, store the database
   handle in *MAPPINGP or a file descriptor for the file in *FDP and
   return NSS_STATUS_SUCCESS.  On failure, return the appropriate
   lookup status.  */</doc>
<use f='codebrowser/nss/nss_files/files-grp.c' l='33' macro='1' u='c' c='_nss_db_getgrnam_r'/>
<use f='codebrowser/nss/nss_files/files-grp.c' l='40' macro='1' u='c' c='_nss_db_getgrgid_r'/>
<use f='codebrowser/nss/nss_files/files-proto.c' l='38' macro='1' u='c' c='_nss_db_getprotobyname_r'/>
<use f='codebrowser/nss/nss_files/files-proto.c' l='42' macro='1' u='c' c='_nss_db_getprotobynumber_r'/>
<use f='codebrowser/nss/nss_files/files-pwd.c' l='33' macro='1' u='c' c='_nss_db_getpwnam_r'/>
<use f='codebrowser/nss/nss_files/files-pwd.c' l='40' macro='1' u='c' c='_nss_db_getpwuid_r'/>
<use f='codebrowser/nss/nss_files/files-rpc.c' l='38' macro='1' u='c' c='_nss_db_getrpcbyname_r'/>
<use f='codebrowser/nss/nss_files/files-rpc.c' l='42' macro='1' u='c' c='_nss_db_getrpcbynumber_r'/>
<use f='codebrowser/nss/nss_files/files-service.c' l='41' macro='1' u='c' c='_nss_db_getservbyname_r'/>
<use f='codebrowser/nss/nss_files/files-service.c' l='55' macro='1' u='c' c='_nss_db_getservbyport_r'/>
<use f='codebrowser/nss/nss_files/files-sgrp.c' l='33' macro='1' u='c' c='_nss_db_getsgnam_r'/>
<use f='codebrowser/nss/nss_files/files-spwd.c' l='33' macro='1' u='c' c='_nss_db_getspnam_r'/>
<use f='codebrowser/nss/nss_db/db-initgroups.c' l='40' u='c' c='_nss_db_initgroups_dyn'/>
<use f='codebrowser/nss/nss_db/db-netgrp.c' l='44' u='c' c='_nss_db_setnetgrent'/>
<def f='codebrowser/nss/nss_db/db-open.c' l='34' ll='59' type='enum nss_status internal_setent(const char * file, struct nss_db_map * mapping)'/>
<doc f='codebrowser/nss/nss_db/db-open.c' l='30'>/* Open the database stored in FILE.  If succesful, store either a
   pointer to the mapped file or a file handle for the file in H and
   return NSS_STATUS_SUCCESS.  On failure, return the appropriate
   lookup status.  */</doc>
<def f='codebrowser/nss/nss_files/files-XXX.c' l='69' ll='85' type='enum nss_status internal_setent(FILE ** stream)'/>
<use f='codebrowser/nss/nss_files/files-hosts.c' l='104' macro='1' u='c' c='_nss_files_gethostbyaddr_r'/>
<use f='codebrowser/nss/nss_files/files-hosts.c' l='335' u='c' c='_nss_files_gethostbyname3_r'/>
<use f='codebrowser/nss/nss_files/files-hosts.c' l='389' u='c' c='_nss_files_gethostbyname4_r'/>
<doc f='codebrowser/nss/nss_files/files-XXX.c' l='68'>/* Open database file if not already opened.  */</doc>
<use f='codebrowser/nss/nss_files/files-network.c' l='79' macro='1' u='c' c='_nss_files_getnetbyname_r'/>
<use f='codebrowser/nss/nss_files/files-network.c' l='83' macro='1' u='c' c='_nss_files_getnetbyaddr_r'/>
