<dec f='codebrowser/posix/regcomp.c' l='65' type='bin_tree_t * parse_reg_exp(re_string_t * regexp, regex_t * preg, re_token_t * token, reg_syntax_t syntax, Idx nest, reg_errcode_t * err)'/>
<use f='codebrowser/posix/regcomp.c' l='2125' u='c' c='parse'/>
<def f='codebrowser/posix/regcomp.c' l='2150' ll='2188' type='bin_tree_t * parse_reg_exp(re_string_t * regexp, regex_t * preg, re_token_t * token, reg_syntax_t syntax, Idx nest, reg_errcode_t * err)'/>
<use f='codebrowser/posix/regcomp.c' l='2494' u='c' c='parse_sub_exp'/>
<doc f='codebrowser/posix/regcomp.c' l='2141'>/* This function build the following tree, from regular expression
   &lt;branch1&gt;|&lt;branch2&gt;:
	   ALT
	   / \
	  /   \
   &lt;branch1&gt; &lt;branch2&gt;

   ALT means alternative, which represents the operator &apos;|&apos;.  */</doc>
