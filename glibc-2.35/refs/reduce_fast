<def f='codebrowser/sysdeps/ieee754/flt-32/s_sincosf.h' l='47' ll='65' type='double reduce_fast(double x, const sincos_t * p, int * np)'/>
<doc f='codebrowser/sysdeps/ieee754/flt-32/s_sincosf.h' l='42'>/* Fast range reduction using single multiply-subtract.  Return the modulo of
   X as a value between -PI/4 and PI/4 and store the quadrant in NP.
   The values for PI/2 and 2/PI are accessed via P.  Since PI/2 as a double
   is accurate to 55 bits and the worst-case cancellation happens at 6 * PI/4,
   the result is accurate for |X| &lt;= 120.0.  */</doc>
<use f='codebrowser/sysdeps/ieee754/flt-32/s_tanf.c' l='36' u='c' c='rem_pio2f'/>
<use f='codebrowser/sysdeps/ieee754/flt-32/s_cosf.c' l='56' u='c' c='__cosf_fma'/>
<use f='codebrowser/sysdeps/ieee754/flt-32/s_sincosf.c' l='63' u='c' c='__sincosf_fma'/>
<use f='codebrowser/sysdeps/ieee754/flt-32/s_sinf.c' l='61' u='c' c='__sinf_fma'/>
