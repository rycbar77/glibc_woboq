<dec f='include/linux/rseq.h' l='90' type='__u32'/>
<offset>32</offset>
<doc f='include/linux/rseq.h' l='76'>/*
	 * Restartable sequences cpu_id field. Updated by the kernel.
	 * Read by user-space with single-copy atomicity semantics. This
	 * field should only be read by the thread which registered this
	 * data structure. Aligned on 32-bit. Values
	 * RSEQ_CPU_ID_UNINITIALIZED and RSEQ_CPU_ID_REGISTRATION_FAILED
	 * have a special semantic: the former means &quot;rseq uninitialized&quot;,
	 * and latter means &quot;rseq initialization failed&quot;. This value is
	 * meant to be read within rseq critical sections and compared
	 * with the cpu_id_start value previously read, before performing
	 * the commit instruction, or read and compared with the
	 * cpu_id_start value before returning a value loaded from a data
	 * structure indexed using the cpu_id_start value.
	 */</doc>
<use f='codebrowser/sysdeps/unix/sysv/linux/rseq-internal.h' l='40' u='r' c='rseq_register_current_thread'/>
<use f='codebrowser/sysdeps/unix/sysv/linux/rseq-internal.h' l='40' u='r' c='rseq_register_current_thread'/>
<use f='codebrowser/sysdeps/unix/sysv/linux/rseq-internal.h' l='40' u='r' c='rseq_register_current_thread'/>
<use f='codebrowser/sysdeps/unix/sysv/linux/rseq-internal.h' l='40' u='r' c='rseq_register_current_thread'/>
<use f='codebrowser/sysdeps/unix/sysv/linux/rseq-internal.h' l='40' u='r' c='rseq_register_current_thread'/>
<use f='codebrowser/nptl/pthread_create.c' l='686' c='__pthread_create_2_1'/>
<use f='codebrowser/sysdeps/unix/sysv/linux/sched_getcpu.c' l='40' c='sched_getcpu'/>
